* {
  margin: 0;
  box-sizing: border-box;
  padding: 0;
}
body {
  display: flex;

  height: 100vh;

  background-color: #f5f5f5;

  align-items: center;
  justify-content: center;
}
.box {
  /* 隐藏超过盒子方位的元素 */
  overflow: hidden;

  position: relative;
  /* 这里必须设置z-index具体值即可，如果不设置无法显示设置较低层级伪元素中的内容，但需注意伪元素由于是会覆盖整个元素内容，不能设置比伪元素小的值 */
  z-index: 0;

  border-radius: 20px;
  /* 通过padding将元素尽量设置成一个正方形，使得在动画过程中流水边框不容易看出区别 */
  padding: 40px 40px;

  font-size: 18px;

  color: #66ddf7;
  background-color: #fff;
}
.box::before {
  position: absolute;
  top: -50%;
  left: -50%;
  z-index: -20;

  width: 200%;
  height: 200%;
  /* background-color: #22292f; */

  background-image: conic-gradient(transparent, #66ddf7, transparent 30%);
  /* transform-origin: 50% 50%; */

  animation:
    rotate 5s linear infinite,
    chBg 5s linear infinite;

  content: '';
  /* animation: chBg 5s linear infinite; */
}
@keyframes chBg {
  from {
    filter: hue-rotate(0deg);
  }
  to {
    filter: hue-rotate(360deg);
  }
}
@keyframes rotate {
  0% {
    transform: rotate(0deg);
    /* filter: hue-rotate(0deg); */
  }
  100% {
    transform: rotate(360deg);
    /* filter: hue-rotate(360deg); */
  }
}
/* 伪元素设置为和盒子一样大，并且设置层级比盒子更高，这样伪元素就能覆盖在盒子之上 */
.box::after {
  position: absolute;
  z-index: -1;

  border-radius: 20px;

  background-color: #000;

  content: '';
  /* inset设置让其内缩 */

  inset: 4px;
}
